{"title":"github page博客不同电脑管理","date":"2016-11-24T16:00:00.000Z","excerpt":"<p>目前本地已有github page所有文件，想直接建立两个分支分别存储源文件和生成好的博客<br>发现直接git新建分支不好用，此时在git中切换至存放博客的主目录执行,目的在于将当前文件初始化为git可管理文件<br><code>git init</code><br>由于刚刚初始化为git目录，现在识别不出master分支，会报错“fatal: Not a valid object name: ‘master’”<br>-解决该问题需要提交一次才可以，即<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add.</span><br><span class=\"line\">git commit -m &quot;commit&quot;</span><br></pre></td></tr></table></figure></p>","slug":"GithubPage不同电脑管理","comments":true,"tags":["技术"],"categories":["配置"],"updated":"2016-11-28T05:57:31.000Z","content":"<p>目前本地已有github page所有文件，想直接建立两个分支分别存储源文件和生成好的博客<br>发现直接git新建分支不好用，此时在git中切换至存放博客的主目录执行,目的在于将当前文件初始化为git可管理文件<br><code>git init</code><br>由于刚刚初始化为git目录，现在识别不出master分支，会报错“fatal: Not a valid object name: ‘master’”<br>-解决该问题需要提交一次才可以，即<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add.</span><br><span class=\"line\">git commit -m &quot;commit&quot;</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>但是执行完发现报错“untracked files, nothing added to commit but untracked files present” 这是因为刚刚提交的文件只是暂存状态，并未真正提交，于是想了个迂回的办法，先提交一个小文件，直接<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add filename</span><br><span class=\"line\">git commit -m &quot;commit&quot;</span><br></pre></td></tr></table></figure></p>\n<p>之后再执行创建分支命令即可<br><code>git branch hexo</code><br>现在我们有两个分支master和hexo，我们要将hexo设置为默认分支，首先切换分支至hexo<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout hexo</span><br><span class=\"line\">git add dir #注意首次提交新文件夹时输入文件目录名称</span><br><span class=\"line\">git add filename</span><br><span class=\"line\">git push origin hexo</span><br></pre></td></tr></table></figure></p>\n<p>此时又报错”fatal: ‘origin’ does not appear to be a git repository”<br>这是因为在最初并为连到远程项目地址<br><code>git remote add origin git@github.com:username/proname.git</code><br>第一次我的远程地址输错了，再次报错“fatal: remote origin already exists.”<br>此时需要将原来的remote删除，再次执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote rm origin</span><br><span class=\"line\">git remote add origin git@github.com:username/proname.git #此处我的地址为coding地址</span><br><span class=\"line\">git push origin hexo</span><br></pre></td></tr></table></figure></p>\n<p>执行完毕就将我的hexo博客源文件上传至coding.net来保存<br>更新静态博客内容，也是在hexo分支下，执行<br><code>hexo d -g</code><br>若提交时遇到错误” Warning: Your console font probably doesn‘t support Unicode. If you experience trange characters in the output, consider switching to a TrueType font such as ucida Console!”<br>导致无法提交，通常这是因为文件中含有中文，解决办法如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config [--global] core.quotepath off</span><br><span class=\"line\">git config [--global] --unset i18n.logoutputencoding</span><br><span class=\"line\">git config [--global] --unset i18n.commitencoding</span><br></pre></td></tr></table></figure></p>\n<p>我试验完问题依然存在，再次尝试<br><code>git config --global core.autocrlf true</code><br>无果，于是将cmd默认字体换为宋体，不再报这个错误，但是某些文件依然没有上传，此时执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find ./ -name &quot;*.gitignore&quot;</span><br><span class=\"line\">find ./ -name &quot;*.gitignore&quot; | xargs rm</span><br><span class=\"line\">git status</span><br></pre></td></tr></table></figure></p>\n<p>找到遗漏的文件，删除，并重新上传，或者<br><code>git rm --cached</code><br>清除掉远程目录，再重新上传。</p>\n","prev":{"title":"论文速读《Learning to Generate Reviews and Discovering Sentiment》","slug":"Learning to Generate Reviews and Discovering Sentiment"},"next":{"title":"tensorflow-HPC配置方法","slug":"tensorflow-HPC配置方法"},"link":"http://yoursite.com/post/GithubPage不同电脑管理"}